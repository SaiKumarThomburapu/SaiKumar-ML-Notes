 
SAI KUMAR THOMBURAPU NOTES ON ML
 
Step 1: Basics of Mathematics and Programming

1. Mathematics for Machine Learning

a. Linear Algebra

Linear algebra is fundamental in machine learning because it deals with vectors and matrices, which are the structures used to represent data.

Example 1: Vectors and Matrices

Vector: A list of numbers (e.g., features of a data point).
x = [2, 3, 5]  # A vector with 3 features
Matrix: A 2D array of numbers (used for representing multiple data points).

A = [[1, 2], [3, 4], [5, 6]]  # A 3x2 matrix
Matrix Multiplication: Used in neural networks and other algorithms to transform data.


import numpy as np
A = np.array([[1, 2], [3, 4], [5, 6]])
B = np.array([1, 0])
result = np.dot(A, B)  # Dot product
print(result)
# Output: [1, 3, 5]

Why it's important: Many machine learning algorithms (like deep learning) involve matrix operations to process data and calculate predictions.

b. Probability and Statistics

Probability and statistics are used to make predictions based on data. They help you quantify uncertainty and make decisions based on the data you have.

Example 2: Probability

In Naive Bayes classification, you calculate the probability of a class given the input features:
 
# Example: Probability of class 'spam' given the word 'free' in an email
P_spam = 0.2  # Prior probability of spam
P_free_given_spam = 0.7  # Likelihood of 'free' in spam emails
P_free = 0.4  # Probability of 'free' in all emails

# Using Bayes' theorem to calculate P(spam | free)

P_spam_given_free = (P_free_given_spam * P_spam) / P_free
print(P_spam_given_free)  # Output: 0.35

Why it's important: Understanding how to calculate probabilities helps in classification and regression tasks (like predicting whether an email is spam).




3.Calculus

At the end we obvisouly want to minimize the errors(residual) which ultimately results in increasing the accuracy

Agenda is to decrease the error by decreasing the MSE(Mean Square Errors)
    

MSE=1/n(Y_ture values-Y_Predicted_values)


>>And the next thing is we should know basics of python,
  A basic fundamental python for a data science student


------- This are all the python libraries we will use in Data science-----------

>>NumPy: For numerical operations (like arrays, matrix operations).
>>Pandas: For data manipulation and also for data analysis (like loading datasets, cleaning data).
>>Matplotlib/Seaborn: For data visualization.
>>Scikit-learn: For implementing machine learning algorithms.



>>> Key difference between lists, Arrays and NumPyArrays
-----NumpyArrays
_____Performance: Highly optimized for numerical computations. NumPy arrays are designed for performance and are more efficient for large datasets and complex mathematical operations.


Pandas-Key Features
1) DataFrames
2) Data Manupulation
3) Handling Missing Data


Creating New DataFrames using Pandas
Example
import pandas as pd
data={'name':['sai','kumar','babblu'],
      'age':[22,23,24],
      'marks':[98,99,90]}
df=pd.DataFrame(data)
print(df)

output: 
    name  age  marks
0     sai   22     98
1   kumar   23     99
2  babblu   24     90


Matplotlib/Seaborn:

Matplotlib and Seaborn are great for visualizing data and insights, which is a crucial step in the Exploratory Data Analysis (EDA) phase.
Seaborn makes it easier to visualize complex relationships and trends in the data.





















